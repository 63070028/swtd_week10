pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = "mydockerregistry.com"
        DOCKER_IMAGE_NAME = "my-docker-image"
        DOCKER_IMAGE_TAG = "latest"
    }

    stages {
        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}", "-f Dockerfile .")
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry("${DOCKER_REGISTRY}", "docker-registry-credentials") {
                        dockerImage.push()
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                dockerImage.clean()
            }
        }
    }
}
